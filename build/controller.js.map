{"version":3,"sources":["model.js","utils/formatters.js","view/updateResultsView.js","utils/updateModel.js","view/radioPrograms.js","view/utils.js","view/costInput.js","view/costRange.js","view/paymentInput.js","view/paymentRange.js","view/timeInput.js","view/timeRange.js","controller.js"],"names":["data","selectedProgram","cost","minPrice","maxPrice","minPaymentPercents","maxPaymentPercents","paymentPercents","payment","getMinPayment","getMaxPayment","minYear","maxYear","time","programs","base","it","gov","zero","results","rate","getData","getResults","setData","newData","console","log","onUpdate","id","months","totalAmount","monthRate","generalRate","monthPayment","overPayment","priceFormatter","Intl","NumberFormat","style","currency","maximumFractionDigits","priceFormatterDecimals","updateResultsView","document","querySelector","innerHTML","format","updateModel","element","dispatchEvent","CustomEvent","bubbles","detail","init","radioBtns","querySelectorAll","value","innerText","forEach","radioBtn","addEventListener","parseFloat","updateMinPercents","input","cleaveInput","Cleave","numeral","numeralThousandsGroupStyle","delimiter","setRawValue","getRawValue","closest","classList","add","remove","slider","noUiSlider","create","start","connect","tooltips","step","range","min","max","wNumb","decimals","thousand","suffix","on","sliderValue","get","split","parseInt","String","replace","window","onload","Model","cleaveCost","costInput","sliderCost","costRange","cleavePayment","paymentInput","sliderPayment","paymentRange","cleaveTime","timeInput","sliderTime","timeRange","e","updateOptions","set","updateFormAndSliders","openFormBtn","orderForm","submitFormBtn","preventDefault","formData","FormData","checkOnUrl","url","urlArrayDot","length","pop","newUrl","join","urlArraySlash","location","href","fetch","method","headers","body","JSON","stringify","form","name","email","phone","response","text","result","removeAttribute","reset","getElementById","setAttribute","fetchData"],"mappings":"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","file":"controller.js","sourceRoot":"..\\js","sourcesContent":["let data = {\r\n\tselectedProgram: 0.1,\r\n\tcost: 12000000,\r\n\tminPrice: 375000,\r\n\tmaxPrice: 100000000,\r\n\tminPaymentPercents: 0.15,\r\n\tmaxPaymentPercents: 0.9,\r\n\tpaymentPercents: 0.5,\r\n\tpayment: 6000000,\r\n\tgetMinPayment: function () {\r\n\t\treturn this.cost * this.minPaymentPercents;\r\n\t},\r\n\tgetMaxPayment: function () {\r\n\t\treturn this.cost * this.maxPaymentPercents;\r\n    },\r\n    minYear: 1,\r\n    maxYear: 30,\r\n    time: 10,\r\n\tprograms: {\r\n\t\tbase: 0.1,\r\n\t\tit: 0.047,\r\n\t\tgov: 0.067,\r\n\t\tzero: 0.12,\r\n\t},\r\n};\r\n\r\nlet results = {\r\n\trate: data.selectedProgram,\r\n};\r\n\r\nfunction getData() {\r\n\treturn { ...data };\r\n}\r\n\r\nfunction getResults() {\r\n\treturn { ...results };\r\n}\r\n\r\nfunction setData(newData) {\r\n\tconsole.log('New data', newData);\r\n\r\n\tif (newData.onUpdate === 'radioProgram') {\r\n\t\tif (newData.id === 'zero-value') {\r\n\t\t\tdata.minPaymentPercents = 0;\r\n\t\t} else {\r\n\t\t\tdata.minPaymentPercents = 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'inputCost' || newData.onUpdate === 'costSlider') {\r\n\t\t// Обновление цены\r\n\t\t// Если стоимость меньше мин цены\r\n\t\tif (newData.cost < data.minPrice) newData.cost = data.minPrice;\r\n\r\n\t\t// Если стоимость больше макс цены\r\n\t\tif (newData.cost > data.maxPrice) newData.cost = data.maxPrice;\r\n\r\n\t\t// Если новая стоимость меньше первоначалки\r\n\t\tif (data.payment > data.getMaxPayment()) {\r\n\t\t\tdata.payment = data.getMaxPayment();\r\n\t\t}\r\n\r\n\t\t// Если сумма первоначалки меньше чем допустимый мин платеж\r\n\t\tif (data.payment < data.getMinPayment()) {\r\n\t\t\tdata.payment = data.getMinPayment();\r\n\t\t}\r\n\r\n\t\tdata.paymentPercents = (data.payment * 100) / newData.cost / 100;\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'inputPayment') {\r\n\t\t// Пересчитываем %\r\n\t\tnewData.paymentPercents = (newData.payment * 100) / data.cost / 100;\r\n\r\n\t\t// Если проценты больше 90%\r\n\t\tif (newData.paymentPercents > data.maxPaymentPercents) {\r\n\t\t\tnewData.paymentPercents = data.maxPaymentPercents;\r\n\t\t\tnewData.payment = data.cost * data.maxPaymentPercents;\r\n\t\t}\r\n\r\n\t\t// Если проценты меньше 90%\r\n\t\tif (newData.paymentPercents < data.minPaymentPercents) {\r\n\t\t\tnewData.paymentPercents = data.minPaymentPercents;\r\n\t\t\tnewData.payment = data.cost * data.minPaymentPercents;\r\n\t\t}\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'paymentSlider') {\r\n\t\tnewData.paymentPercents = newData.paymentPercents / 100;\r\n\t\tdata.payment = data.cost * newData.paymentPercents;\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'inputTime') {\r\n\t\tif (newData.time > data.maxYear) {\r\n\t\t\tnewData.time = data.maxYear;\r\n\t\t}\r\n\r\n\t\tif (newData.time < data.minYear) {\r\n\t\t\tnewData.time = data.minYear;\r\n\t\t}\r\n\t}\r\n\r\n\tdata = {\r\n\t\t...data,\r\n\t\t...newData,\r\n\t};\r\n\r\n\t// Рассчет ипотеки\r\n    const months = data.time * 12;\r\n    const totalAmount = data.cost - data.payment;\r\n    const monthRate = data.selectedProgram / 12;\r\n    const generalRate = (1 + monthRate) ** months;\r\n    const monthPayment = (totalAmount * monthRate * generalRate) / (generalRate - 1);\r\n    const overPayment = monthPayment * months - totalAmount;\r\n\r\n\tresults = {\r\n        rate: data.selectedProgram,\r\n        totalAmount,\r\n        monthPayment,\r\n        overPayment\r\n\t};\r\n\r\n\tconsole.log('Updated data', data);\r\n\tconsole.log('New resulst', results);\r\n}\r\n\r\nexport { getData, setData, getResults };\r\n","const priceFormatter = new Intl.NumberFormat('ru-RU', {\r\n    style: 'currency',\r\n    currency: 'RUB',\r\n    maximumFractionDigits: 0\r\n})\r\n// 7 000 000 Р\r\n\r\nconst priceFormatterDecimals = new Intl.NumberFormat('ru-RU', {\r\n\tstyle: 'currency',\r\n\tcurrency: 'RUB',\r\n\tmaximumFractionDigits: 2,\r\n});\r\n// 7 000 000.45 Р\r\n\r\nexport {priceFormatter, priceFormatterDecimals}","import {priceFormatter, priceFormatterDecimals} from './../utils/formatters.js'\r\n\r\nfunction updateResultsView(results) {\r\n    document.querySelector('#total-percent').innerHTML = results.rate * 100 + '%';\r\n    document.querySelector('#total-month-payment').innerHTML = priceFormatterDecimals.format(results.monthPayment);\r\n    document.querySelector('#total-cost').innerHTML = priceFormatter.format(results.totalAmount);\r\n    document.querySelector('#total-overpayment').innerHTML = priceFormatterDecimals.format(results.overPayment);\r\n}\r\n\r\nexport default updateResultsView;","function updateModel(element, data) {\r\n    element.dispatchEvent(\r\n\t\tnew CustomEvent('updateForm', {\r\n\t\t\tbubbles: true,\r\n\t\t\tdetail: {...data}\r\n\t\t})\r\n\t);\r\n}\r\n\r\nexport default updateModel;","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n\r\n    const radioBtns = document.querySelectorAll('input[name=\"program\"]');\r\n\tconst { base, it, gov, zero } = getData().programs;\r\n\r\n\t// Set program rates in radio buttons\r\n\tdocument.querySelector('#base-value').value = base;\r\n\tdocument.querySelector('#it-value').value = it;\r\n\tdocument.querySelector('#gov-value').value = gov;\r\n\tdocument.querySelector('#zero-value').value = zero;\r\n\r\n\t// Show program rates on page\r\n\tdocument.querySelector('#base-text').innerText = base * 100 + '%';\r\n\tdocument.querySelector('#it-text').innerText = it * 100 + '%';\r\n\tdocument.querySelector('#gov-text').innerText = gov * 100 + '%';\r\n    document.querySelector('#zero-text').innerText = zero * 100 + '%';\r\n\r\n    radioBtns.forEach(function (radioBtn) {\r\n        radioBtn.addEventListener('change', function () {\r\n\t\t\tupdateModel(this, {\r\n\t\t\t\tonUpdate: 'radioProgram',\r\n\t\t\t\tselectedProgram: parseFloat(this.value),\r\n\t\t\t\tid: this.id,\r\n\t\t\t});\r\n\t\t});\r\n    })\r\n}\r\n\r\nexport default init;","function updateMinPercents(data) {\r\n    document.querySelector('#percents-from').innerText = data.minPaymentPercents * 100 + '%';\r\n}\r\n\r\nexport { updateMinPercents };","import updateModel from './../utils/updateModel.js'\r\n\r\nfunction init(getData) {\r\n    const data = getData();\r\n    const input = document.querySelector('#input-cost');\r\n\r\n    const settings = {\r\n\t\tnumeral: true,\r\n\t\tnumeralThousandsGroupStyle: 'thousand',\r\n\t\tdelimiter: ' ',\r\n\t};\r\n\r\n    const cleaveInput = new Cleave(input, settings);\r\n    cleaveInput.setRawValue(data.cost);\r\n\r\n    input.addEventListener('input', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\t// Проверка на мин и макс цену\r\n\t\tif (value < data.minPrice || value > data.maxPrice) {\r\n\t\t\tinput.closest('.param__details').classList.add('param__details--error');\r\n\t\t}\r\n\r\n\t\tif (value >= data.minPrice && value <= data.maxPrice) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { cost: value, onUpdate: 'inputCost' });\r\n\t})\r\n\r\n    input.addEventListener('change', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\tif (value > data.maxPrice) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.maxPrice);\r\n\t\t}\r\n\r\n\t\tif (value < data.minPrice) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.minPrice);\r\n        }\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { cost: +cleaveInput.getRawValue(), onUpdate: 'inputCost' });\r\n\t})\r\n\r\n\treturn cleaveInput;\r\n}\r\n\r\nexport default init;","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n    const slider = document.querySelector('#slider-cost');\r\n    const data = getData();\r\n\r\n    noUiSlider.create(slider, {\r\n        start: data.cost,\r\n        connect: 'lower',\r\n        tooltips: true,\r\n        step: 100000,\r\n        range: {\r\n            min: data.minPrice,\r\n            '1%': [400000, 100000],\r\n            '50%': [10000000, 500000],\r\n            max: data.maxPrice\r\n        },\r\n        format: wNumb({\r\n            decimals: 0,\r\n            thousand: ' ',\r\n            suffix: ''\r\n        })\r\n    });\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\t\t// Get slider value\r\n        let sliderValue = slider.noUiSlider.get();\r\n        sliderValue = sliderValue.split('.')[0];\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''));\r\n\r\n        updateModel(slider, {cost: sliderValue, onUpdate: 'costSlider'});\r\n    })\r\n\r\n\r\n    return slider;\r\n}\r\n\r\nexport default init;","import updateModel from '../utils/updateModel.js'\r\n\r\nfunction init(getData) {\r\n    const input = document.querySelector('#input-downpayment');\r\n\r\n    const settings = {\r\n\t\tnumeral: true,\r\n\t\tnumeralThousandsGroupStyle: 'thousand',\r\n\t\tdelimiter: ' ',\r\n\t};\r\n\r\n    const cleaveInput = new Cleave(input, settings);\r\n    cleaveInput.setRawValue(getData().payment);\r\n\r\n    input.addEventListener('input', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\t// Проверка на мин и макс сумму первого платежа\r\n\t\tif (value < getData().getMinPayment() || value > getData().getMaxPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.add('param__details--error');\r\n\t\t}\r\n\r\n\t\tif (value >= getData().getMinPayment() && value <= getData().getMaxPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { payment: value, onUpdate: 'inputPayment' });\r\n\t})\r\n\r\n    input.addEventListener('change', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\tif (value > getData().getMaxPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(getData().getMaxPayment());\r\n\t\t}\r\n\r\n\t\tif (value < getData().getMinPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(getData().getMinPayment());\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { payment: value, onUpdate: 'inputPayment' });\r\n\t})\r\n\r\n\treturn cleaveInput;\r\n}\r\n\r\nexport default init;","import updateModel from \"../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n    const slider = document.querySelector('#slider-downpayment');\r\n\r\n    noUiSlider.create(slider, {\r\n\t\tstart: getData().paymentPercents * 100,\r\n\t\tconnect: 'lower',\r\n\t\ttooltips: true,\r\n\t\tstep: 1,\r\n\t\trange: {\r\n\t\t\tmin: getData().minPaymentPercents * 100,\r\n\t\t\tmax: getData().maxPaymentPercents * 100,\r\n\t\t},\r\n\t\tformat: wNumb({\r\n\t\t\tdecimals: 0,\r\n\t\t\tthousand: ' ',\r\n\t\t\tsuffix: '',\r\n\t\t}),\r\n\t});\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\t\t// Get slider value\r\n        let sliderValue = slider.noUiSlider.get();\r\n        sliderValue = sliderValue.split('.')[0];\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''));\r\n\r\n        updateModel(slider, { paymentPercents: sliderValue, onUpdate: 'paymentSlider' });\r\n    })\r\n\r\n\r\n    return slider;\r\n}\r\n\r\nexport default init;","import updateModel from '../utils/updateModel.js'\r\n\r\nfunction init(getData) {\r\n    const data = getData();\r\n    const input = document.querySelector('#input-term');\r\n\r\n    const settings = {\r\n\t\tnumeral: true,\r\n\t\tnumeralThousandsGroupStyle: 'thousand',\r\n\t\tdelimiter: ' ',\r\n\t};\r\n\r\n    const cleaveInput = new Cleave(input, settings);\r\n    cleaveInput.setRawValue(data.time);\r\n\r\n    input.addEventListener('input', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\t// Проверка на мин и макс цену\r\n\t\tif (value < data.minYear || value > data.maxYear) {\r\n\t\t\tinput.closest('.param__details').classList.add('param__details--error');\r\n\t\t}\r\n\r\n\t\tif (value >= data.minYear && value <= data.maxYear) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { time: value, onUpdate: 'inputTime' });\r\n\t})\r\n\r\n    input.addEventListener('change', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\tif (value > data.maxYear) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.maxYear);\r\n\t\t}\r\n\r\n\t\tif (value < data.minYear) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.minYear);\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { time: +cleaveInput.getRawValue(), onUpdate: 'inputTime' });\r\n\t})\r\n\r\n\treturn cleaveInput;\r\n}\r\n\r\nexport default init;","import updateModel from \"../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n    const slider = document.querySelector('#slider-term');\r\n    const data = getData();\r\n\r\n    noUiSlider.create(slider, {\r\n\t\tstart: data.time,\r\n\t\tconnect: 'lower',\r\n\t\ttooltips: true,\r\n\t\tstep: 1,\r\n\t\trange: {\r\n\t\t\tmin: data.minYear,\r\n\t\t\tmax: data.maxYear,\r\n\t\t},\r\n\t\tformat: wNumb({\r\n\t\t\tdecimals: 0,\r\n\t\t\tthousand: ' ',\r\n\t\t\tsuffix: '',\r\n\t\t}),\r\n\t});\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\t\t// Get slider value\r\n        let sliderValue = slider.noUiSlider.get();\r\n        sliderValue = sliderValue.split('.')[0];\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''));\r\n\r\n        updateModel(slider, { time: sliderValue, onUpdate: 'timeSlider' });\r\n    })\r\n\r\n    return slider;\r\n}\r\n\r\nexport default init;","import * as Model from \"./model.js\";\r\nimport updateResultsView from './view/updateResultsView.js';\r\nimport programs from './view/radioPrograms.js'\r\nimport { updateMinPercents } from \"./view/utils.js\";\r\n\r\nimport costInput from './view/costInput.js'\r\nimport costRange from './view/costRange.js'\r\n\r\nimport paymentInput from './view/paymentInput.js';\r\nimport paymentRange from './view/paymentRange.js';\r\n\r\nimport timeInput from './view/timeInput.js';\r\nimport timeRange from './view/timeRange.js';\r\n\r\nwindow.onload = function () {\r\n\tconst getData = Model.getData;\r\n\r\n\t// Init programs\r\n\tprograms(getData);\r\n\r\n\t// Init Cost input\r\n\tconst cleaveCost = costInput(getData);\r\n\tconst sliderCost = costRange(getData);\r\n\r\n\t// Init Payment input\r\n\tconst cleavePayment = paymentInput(getData);\r\n\tconst sliderPayment = paymentRange(getData);\r\n\r\n\t// Time\r\n\tconst cleaveTime = timeInput(getData);\r\n\tconst sliderTime = timeRange(getData);\r\n\r\n\tModel.setData({});\r\n\tconst results = Model.getResults();\r\n\tupdateResultsView(results);\r\n\r\n\tdocument.addEventListener('updateForm', (e) => {\r\n\t\tModel.setData(e.detail);\r\n\r\n\t\tconst data = Model.getData();\r\n\t\tconst results = Model.getResults();\r\n\r\n\t\t// Update all form view based on model\r\n\t\tupdateFormAndSliders(data);\r\n\r\n\t\t// Update results block\r\n\t\tupdateResultsView(results);\r\n\t});\r\n\r\n\tfunction updateFormAndSliders(data) {\r\n\t\t// Update radio btns\r\n\t\tif (data.onUpdate === 'radioProgram') {\r\n\t\t\tupdateMinPercents(data);\r\n\r\n\t\t\t// Update payment slider\r\n\t\t\tsliderPayment.noUiSlider.updateOptions({\r\n\t\t\t\trange: {\r\n\t\t\t\t\tmin: data.minPaymentPercents * 100,\r\n\t\t\t\t\tmax: data.maxPaymentPercents * 100,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// costInput\r\n\t\tif (data.onUpdate !== 'inputCost') {\r\n\t\t\tcleaveCost.setRawValue(data.cost);\r\n\t\t}\r\n\r\n\t\t// costSlider\r\n\t\tif (data.onUpdate !== 'costSlider') {\r\n\t\t\tsliderCost.noUiSlider.set(data.cost);\r\n\t\t}\r\n\r\n\t\t// paymentInput\r\n\t\tif (data.onUpdate !== 'inputPayment') {\r\n\t\t\tcleavePayment.setRawValue(data.payment);\r\n\t\t}\r\n\r\n\t\t// paymentSlider\r\n\t\tif (data.onUpdate !== 'paymentSlider') {\r\n\t\t\tsliderPayment.noUiSlider.set(data.paymentPercents * 100);\r\n\t\t}\r\n\r\n\t\t// timeInput\r\n\t\tif (data.onUpdate !== 'inputTime') {\r\n\t\t\tcleaveTime.setRawValue(data.time);\r\n\t\t}\r\n\r\n\t\t// timeSlider\r\n\t\tif (data.onUpdate !== 'timeSlider') {\r\n\t\t\tsliderTime.noUiSlider.set(data.time);\r\n\t\t}\r\n\t}\r\n\r\n\t// Order Form\r\n    const openFormBtn = document.querySelector('#openFormBtn')\r\n    const orderForm = document.querySelector('#orderForm');\r\n    const submitFormBtn = document.querySelector('#submitFormBtn');\r\n\r\n    openFormBtn.addEventListener('click', function () {\r\n        orderForm.classList.remove('none');\r\n        openFormBtn.classList.add('none')\r\n    })\r\n\r\n    orderForm.addEventListener('submit', function (e) {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Собираем данные с формы перед disable\r\n\t\tconst formData = new FormData(orderForm);\r\n\t\tconsole.log(formData);\r\n\t\tconsole.log(formData.get('name'));\r\n\t\tconsole.log(formData.get('email'));\r\n\t\tconsole.log(formData.get('phone'));\r\n\r\n\t\t// Disable для кнопоки и инпутов\r\n        submitFormBtn.setAttribute('disabled', true);\r\n        submitFormBtn.innerText = 'Заявка отправляется...'\r\n\r\n        orderForm.querySelectorAll('input').forEach(function (input) {\r\n            input.setAttribute('disabled', true);\r\n        })\r\n\r\n        fetchData();\r\n\r\n        async function fetchData() {\r\n\t\t\tconst data = Model.getData();\r\n\t\t\tconst results = Model.getResults();\r\n\r\n\t\t\tlet url = checkOnUrl(document.location.href);\r\n\r\n\t\t\tfunction checkOnUrl(url) {\r\n\t\t\t\tlet urlArrayDot = url.split('.');\r\n\r\n\t\t\t\tif (urlArrayDot[urlArrayDot.length - 1] === 'html') {\r\n\t\t\t\t\turlArrayDot.pop();\r\n\t\t\t\t\tlet newUrl = urlArrayDot.join('.');\r\n\t\t\t\t\tlet urlArraySlash = newUrl.split('/');\r\n\t\t\t\t\turlArraySlash.pop();\r\n\t\t\t\t\tnewUrl = urlArraySlash.join('/') + '/';\r\n\t\t\t\t\treturn newUrl;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn url;\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await fetch(url + 'mail.php', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tform: {\r\n\t\t\t\t\t\tname: formData.get('name'),\r\n\t\t\t\t\t\temail: formData.get('email'),\r\n\t\t\t\t\t\tphone: formData.get('phone'),\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata,\r\n\t\t\t\t\tresults,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\r\n\t\t\tconst result = await response.text();\r\n\t\t\tconsole.log(result);\r\n\r\n\t\t\tsubmitFormBtn.removeAttribute('disabled', true);\r\n\t\t\tsubmitFormBtn.innerText = 'Оформить заявку';\r\n\r\n\t\t\torderForm.querySelectorAll('input').forEach((input) => {\r\n\t\t\t\tinput.removeAttribute('disabled', true);\r\n\t\t\t});\r\n\r\n\t\t\t// Очищаем поля формы\r\n\t\t\torderForm.reset();\r\n\t\t\torderForm.classList.add('none');\r\n\r\n\t\t\t// На основе ответа от сервера показываем сообщения об Успехе или Ошибке\r\n\t\t\tif (result === 'SUCCESS') {\r\n\t\t\t\tdocument.getElementById('success').classList.remove('none');\r\n\t\t\t} else {\r\n\t\t\t\tdocument.getElementById('error').classList.remove('none');\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n}"]}